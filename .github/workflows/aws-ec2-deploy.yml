name: Deploy to EC2 with Docker Compose

on:
  workflow_dispatch:  # Se ejecuta manualmente

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: env_prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Create .env file from secret
        run: |
          echo "${{ secrets.ENV_SECRET }}" > .env
          cat .env  # Verifica que el archivo .env se ha creado correctamente

      - name: Copy Docker Compose and .env to EC2
        run: |
          echo "ðŸ”‘ Copying Docker Compose and .env file to EC2"
          scp -o StrictHostKeyChecking=no -i "${{ secrets.EC2_SSH_KEY }}" docker-compose-prod.yml ubuntu@18.189.194.225:/home/ubuntu/
          scp -o StrictHostKeyChecking=no -i "${{ secrets.EC2_SSH_KEY }}" .env ubuntu@18.189.194.225:/home/ubuntu/

      - name: Connect to EC2 and Verify Connection
        run: |
          echo "ðŸ”‘ SSH Connection to EC2"
          ssh -o StrictHostKeyChecking=no -i "${{ secrets.EC2_SSH_KEY }}" ubuntu@18.189.194.225 "echo 'Connection successful to EC2!'"

      - name: Stop existing containers on EC2 (if any)
        run: |
          echo "ðŸ›‘ Stopping existing containers on EC2"
          ssh -o StrictHostKeyChecking=no -i "${{ secrets.EC2_SSH_KEY }}" ubuntu@18.189.194.225 "
            sudo docker-compose -f /home/ubuntu/docker-compose-prod.yml down || true
          "

      - name: Deploy Docker Compose on EC2
        run: |
          echo "ðŸš€ Running Docker Compose on EC2"
          ssh -o StrictHostKeyChecking=no -i "${{ secrets.EC2_SSH_KEY }}" ubuntu@18.189.194.225 "
            cd /home/ubuntu && sudo docker-compose --env-file .env -f docker-compose-prod.yml up -d
          "
