name: Orquestador de Build y Deploy

on:
  workflow_dispatch:  # Se ejecuta manualmente desde el GitHub Actions UI

jobs:
  build-eureka:
    runs-on: ubuntu-latest
    environment: env_prod

    steps:
      - name: Ejecutar Build Eureka
        env:
          GH_TOKEN: ${{ github.token }}  # Pasar el token de GitHub aquí
        run: |
          echo "Construyendo Eureka..."
          gh workflow run build-eureka.yml  # Ejecuta el YAML de Eureka

  build-api-gateway:
    runs-on: ubuntu-latest
    needs: build-eureka

    steps:
      - name: Ejecutar Build API Gateway
        env:
          GH_TOKEN: ${{ github.token }}  # Pasar el token de GitHub aquí
        run: |
          echo "Construyendo API Gateway..."
          gh workflow run build-api-gateway.yml  # Ejecuta el YAML de API Gateway

  build-ms-product:
    runs-on: ubuntu-latest
    needs: build-api-gateway

    steps:
      - name: Ejecutar Build MS Product
        env:
          GH_TOKEN: ${{ github.token }}  # Pasar el token de GitHub aquí
        run: |
          echo "Construyendo MS Product..."
          gh workflow run build-ms-product.yml  # Ejecuta el YAML de MS Product

  build-ms-inventory:
    runs-on: ubuntu-latest
    needs: build-ms-product

    steps:
      - name: Ejecutar Build MS Inventory
        env:
          GH_TOKEN: ${{ github.token }}  # Pasar el token de GitHub aquí
        run: |
          echo "Construyendo MS Inventory..."
          gh workflow run build-ms-inventory.yml  # Ejecuta el YAML de MS Inventory

  deploy-ec2:
    runs-on: ubuntu-latest
    needs: build-ms-inventory

    steps:
      - name: Ejecutar Deploy en EC2
        env:
          GH_TOKEN: ${{ github.token }}  # Pasar el token de GitHub aquí
        run: |
          echo "Desplegando en EC2..."
          gh workflow run aws-ec2-deploy.yml  # Ejecuta el YAML de Deploy a EC2
